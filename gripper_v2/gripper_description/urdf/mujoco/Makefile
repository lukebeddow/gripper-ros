# a makefile to generate mujoco source files

# this makefile builds mujoco model files, an xml format called mjcf.
# There are three key targets of makefile:
# 	1. mjcf files for the robots (gripper, panda)
#		2. mjcf files for objects, the 'mjcf_include' files
#		3. a set of task files (created by xml_script.py) which combine robots and
#			 objects into final mjcf files which can be loaded for grasping tasks.
#
# xml_script.py current takes all the objects generated by the mjcf_include files
# and randomly splits them up, making a series of task files each with a random
# set of objects. So when you load a task file, you get a random assortment of
# objects you can try to grasp.

# ----- user defined options ----- #

# define directory structure
MJCFDIR = mjcf
URDFDIR = urdf
TASKDIR = $(MJCFDIR)/task
MJINCDIR = $(MJCFDIR)/mjcf_include
ASSETDIR = $(MJINCDIR)/assets
OBJDIR = $(MJINCDIR)/objects

# define additional dependencies for the mjcf_include xmls
MJDEP := define_objects.yaml create_objects.xacro

MAKEFLAGS += -j8 # run on up to 8 parallel cpu cores

# ----- automatically generated variables ----- #

# use the robot xacros to get the desired mjcf target names for robots
XACROS := $(wildcard xacro/*.urdf.xacro)
URDFS := $(patsubst xacro/%.urdf.xacro, $(URDFDIR)/%.urdf, $(XACROS))
MJCFS := $(patsubst xacro/%.urdf.xacro, $(MJCFDIR)/%.xml, $(XACROS))

# add the additional dependencies for the mjcf_include files
MJDEP := $(patsubst %, $(MJINCDIR)/%, $(MJDEP))

# use object xacros to get desired mjcf target names for objects
MJXACROS := $(wildcard $(MJINCDIR)/*.xacro)
MJXACROS := $(filter-out $(MJDEP), $(MJXACROS))
MJINC := $(patsubst %.xacro, %.xml, $(MJXACROS))

# ----- start of make ----- #

# first run preprocess to source ros, that automatically runs 'make targets'
all: preprocesses

# this phony target is called when doing 'make' or 'make all'
.PHONY: targets
targets: $(MJCFS) $(MJINC)
	sleep 1
	-pkill roscore
	rm -f $(TASKDIR)/*.xml
	rm -f $(MJINCDIR)/objects/*.xml
	rm -f $(MJINCDIR)/assets/*.xml
	./xml_script.py

# only re-run the xml script to post process xml files
.PHONY: script
script: $(MJCFS)
	rm -f $(TASKDIR)/*.xml
	rm -f $(MJINCDIR)/objects/*.xml
	rm -f $(MJINCDIR)/assets/*.xml
	./xml_script.py

.PHONY: preprocesses
preprocesses: source_ros

# build the mujoco mjcf files (phony means it will always run)
.PHONY: $(MJCFS)
$(MJCFS): $(MJCFDIR)/%.xml : $(URDFDIR)/%.urdf
	rm -f $@
	cp $< $(MJCFDIR)/$(notdir $<) &&\
	cd $(MJCFDIR) &&\
	./compile $(notdir $<) $(notdir $@) &&\
  rm $(notdir $<)

# build the urdfs (use regular xacro to play nice with roscore)
$(URDFS): $(URDFDIR)/%.urdf : xacro/%.urdf.xacro
	xacro $< > $@

# create the object xml includes (use xacro3 for increased speed)
$(MJINC): %.xml : %.xacro $(MJDEP)
	./xacro3 $< > $@

# run a .sh to source ros and start roscore, it then calls 'make targets'
.PHONY: source_ros
ifndef LUKE_FLAG
source_ros:
	./source_ros.sh $(MAKE) targets
	echo ROS has now been sourced
else
source_ros:
	echo ROS already sourced
endif

clean:
	rm -f $(URDFS)
	rm -f $(MJCFS)
	rm -f $(MJINC)
